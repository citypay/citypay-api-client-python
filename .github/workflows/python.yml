# NOTE: This file is auto generated by OpenAPI Generator.
# URL: https://openapi-generator.tech
#
# ref: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: citypay Python package

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  release:
    types: [created]

permissions:
  id-token: write       # REQUIRED
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CP_CLIENT_ID: ${{ secrets.CP_CLIENT_ID }}
      CP_LICENCE_KEY: ${{ secrets.CP_LICENCE_KEY }}
      CP_MERCHANT_ID: ${{ secrets.CP_MERCHANT_ID }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
  build-and-upload:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build and package
      run: |
        python -m pip install build
        python -m build

    - name: Upload the package to PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.2
