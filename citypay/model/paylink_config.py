# coding: utf-8

"""
    CityPay Payment API

     This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities.   # noqa: E501

    Contact: support@citypay.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from citypay import schemas  # noqa: F401


class PaylinkConfig(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            acs_mode = schemas.StrSchema
            
            
            class custom_params(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['PaylinkCustomParam']:
                        return PaylinkCustomParam
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['PaylinkCustomParam'], typing.List['PaylinkCustomParam']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'custom_params':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'PaylinkCustomParam':
                    return super().__getitem__(i)
            descriptor = schemas.StrSchema
            expire_in = schemas.StrSchema
            
            
            class field_guard(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['PaylinkFieldGuardModel']:
                        return PaylinkFieldGuardModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['PaylinkFieldGuardModel'], typing.List['PaylinkFieldGuardModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'field_guard':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'PaylinkFieldGuardModel':
                    return super().__getitem__(i)
            
            
            class lock_params(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lock_params':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            merch_logo = schemas.StrSchema
            merch_terms = schemas.StrSchema
            
            
            class options(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'options':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
        
            @staticmethod
            def part_payments() -> typing.Type['PaylinkPartPayments']:
                return PaylinkPartPayments
            
            
            class pass_through_data(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.StrSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, str, ],
                ) -> 'pass_through_data':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            
            
            class pass_through_headers(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.StrSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, str, ],
                ) -> 'pass_through_headers':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            postback = schemas.StrSchema
            postback_password = schemas.StrSchema
            postback_policy = schemas.StrSchema
            postback_username = schemas.StrSchema
            redirect_delay = schemas.Int32Schema
            redirect_failure = schemas.StrSchema
            redirect_success = schemas.StrSchema
            renderer = schemas.StrSchema
            return_params = schemas.BoolSchema
        
            @staticmethod
            def ui() -> typing.Type['PaylinkUI']:
                return PaylinkUI
            __annotations__ = {
                "acs_mode": acs_mode,
                "custom_params": custom_params,
                "descriptor": descriptor,
                "expire_in": expire_in,
                "field_guard": field_guard,
                "lock_params": lock_params,
                "merch_logo": merch_logo,
                "merch_terms": merch_terms,
                "options": options,
                "part_payments": part_payments,
                "pass_through_data": pass_through_data,
                "pass_through_headers": pass_through_headers,
                "postback": postback,
                "postback_password": postback_password,
                "postback_policy": postback_policy,
                "postback_username": postback_username,
                "redirect_delay": redirect_delay,
                "redirect_failure": redirect_failure,
                "redirect_success": redirect_success,
                "renderer": renderer,
                "return_params": return_params,
                "ui": ui,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acs_mode"]) -> MetaOapg.properties.acs_mode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_params"]) -> MetaOapg.properties.custom_params: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["descriptor"]) -> MetaOapg.properties.descriptor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expire_in"]) -> MetaOapg.properties.expire_in: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["field_guard"]) -> MetaOapg.properties.field_guard: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lock_params"]) -> MetaOapg.properties.lock_params: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["merch_logo"]) -> MetaOapg.properties.merch_logo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["merch_terms"]) -> MetaOapg.properties.merch_terms: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["options"]) -> MetaOapg.properties.options: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["part_payments"]) -> 'PaylinkPartPayments': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pass_through_data"]) -> MetaOapg.properties.pass_through_data: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pass_through_headers"]) -> MetaOapg.properties.pass_through_headers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["postback"]) -> MetaOapg.properties.postback: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["postback_password"]) -> MetaOapg.properties.postback_password: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["postback_policy"]) -> MetaOapg.properties.postback_policy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["postback_username"]) -> MetaOapg.properties.postback_username: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["redirect_delay"]) -> MetaOapg.properties.redirect_delay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["redirect_failure"]) -> MetaOapg.properties.redirect_failure: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["redirect_success"]) -> MetaOapg.properties.redirect_success: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["renderer"]) -> MetaOapg.properties.renderer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["return_params"]) -> MetaOapg.properties.return_params: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ui"]) -> 'PaylinkUI': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["acs_mode", "custom_params", "descriptor", "expire_in", "field_guard", "lock_params", "merch_logo", "merch_terms", "options", "part_payments", "pass_through_data", "pass_through_headers", "postback", "postback_password", "postback_policy", "postback_username", "redirect_delay", "redirect_failure", "redirect_success", "renderer", "return_params", "ui", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acs_mode"]) -> typing.Union[MetaOapg.properties.acs_mode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_params"]) -> typing.Union[MetaOapg.properties.custom_params, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["descriptor"]) -> typing.Union[MetaOapg.properties.descriptor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expire_in"]) -> typing.Union[MetaOapg.properties.expire_in, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["field_guard"]) -> typing.Union[MetaOapg.properties.field_guard, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lock_params"]) -> typing.Union[MetaOapg.properties.lock_params, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["merch_logo"]) -> typing.Union[MetaOapg.properties.merch_logo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["merch_terms"]) -> typing.Union[MetaOapg.properties.merch_terms, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["options"]) -> typing.Union[MetaOapg.properties.options, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["part_payments"]) -> typing.Union['PaylinkPartPayments', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pass_through_data"]) -> typing.Union[MetaOapg.properties.pass_through_data, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pass_through_headers"]) -> typing.Union[MetaOapg.properties.pass_through_headers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["postback"]) -> typing.Union[MetaOapg.properties.postback, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["postback_password"]) -> typing.Union[MetaOapg.properties.postback_password, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["postback_policy"]) -> typing.Union[MetaOapg.properties.postback_policy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["postback_username"]) -> typing.Union[MetaOapg.properties.postback_username, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["redirect_delay"]) -> typing.Union[MetaOapg.properties.redirect_delay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["redirect_failure"]) -> typing.Union[MetaOapg.properties.redirect_failure, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["redirect_success"]) -> typing.Union[MetaOapg.properties.redirect_success, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["renderer"]) -> typing.Union[MetaOapg.properties.renderer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["return_params"]) -> typing.Union[MetaOapg.properties.return_params, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ui"]) -> typing.Union['PaylinkUI', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["acs_mode", "custom_params", "descriptor", "expire_in", "field_guard", "lock_params", "merch_logo", "merch_terms", "options", "part_payments", "pass_through_data", "pass_through_headers", "postback", "postback_password", "postback_policy", "postback_username", "redirect_delay", "redirect_failure", "redirect_success", "renderer", "return_params", "ui", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        acs_mode: typing.Union[MetaOapg.properties.acs_mode, str, schemas.Unset] = schemas.unset,
        custom_params: typing.Union[MetaOapg.properties.custom_params, list, tuple, schemas.Unset] = schemas.unset,
        descriptor: typing.Union[MetaOapg.properties.descriptor, str, schemas.Unset] = schemas.unset,
        expire_in: typing.Union[MetaOapg.properties.expire_in, str, schemas.Unset] = schemas.unset,
        field_guard: typing.Union[MetaOapg.properties.field_guard, list, tuple, schemas.Unset] = schemas.unset,
        lock_params: typing.Union[MetaOapg.properties.lock_params, list, tuple, schemas.Unset] = schemas.unset,
        merch_logo: typing.Union[MetaOapg.properties.merch_logo, str, schemas.Unset] = schemas.unset,
        merch_terms: typing.Union[MetaOapg.properties.merch_terms, str, schemas.Unset] = schemas.unset,
        options: typing.Union[MetaOapg.properties.options, list, tuple, schemas.Unset] = schemas.unset,
        part_payments: typing.Union['PaylinkPartPayments', schemas.Unset] = schemas.unset,
        pass_through_data: typing.Union[MetaOapg.properties.pass_through_data, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        pass_through_headers: typing.Union[MetaOapg.properties.pass_through_headers, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        postback: typing.Union[MetaOapg.properties.postback, str, schemas.Unset] = schemas.unset,
        postback_password: typing.Union[MetaOapg.properties.postback_password, str, schemas.Unset] = schemas.unset,
        postback_policy: typing.Union[MetaOapg.properties.postback_policy, str, schemas.Unset] = schemas.unset,
        postback_username: typing.Union[MetaOapg.properties.postback_username, str, schemas.Unset] = schemas.unset,
        redirect_delay: typing.Union[MetaOapg.properties.redirect_delay, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        redirect_failure: typing.Union[MetaOapg.properties.redirect_failure, str, schemas.Unset] = schemas.unset,
        redirect_success: typing.Union[MetaOapg.properties.redirect_success, str, schemas.Unset] = schemas.unset,
        renderer: typing.Union[MetaOapg.properties.renderer, str, schemas.Unset] = schemas.unset,
        return_params: typing.Union[MetaOapg.properties.return_params, bool, schemas.Unset] = schemas.unset,
        ui: typing.Union['PaylinkUI', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PaylinkConfig':
        return super().__new__(
            cls,
            *args,
            acs_mode=acs_mode,
            custom_params=custom_params,
            descriptor=descriptor,
            expire_in=expire_in,
            field_guard=field_guard,
            lock_params=lock_params,
            merch_logo=merch_logo,
            merch_terms=merch_terms,
            options=options,
            part_payments=part_payments,
            pass_through_data=pass_through_data,
            pass_through_headers=pass_through_headers,
            postback=postback,
            postback_password=postback_password,
            postback_policy=postback_policy,
            postback_username=postback_username,
            redirect_delay=redirect_delay,
            redirect_failure=redirect_failure,
            redirect_success=redirect_success,
            renderer=renderer,
            return_params=return_params,
            ui=ui,
            _configuration=_configuration,
            **kwargs,
        )

from citypay.model.paylink_custom_param import PaylinkCustomParam
from citypay.model.paylink_field_guard_model import PaylinkFieldGuardModel
from citypay.model.paylink_part_payments import PaylinkPartPayments
from citypay.model.paylink_ui import PaylinkUI
